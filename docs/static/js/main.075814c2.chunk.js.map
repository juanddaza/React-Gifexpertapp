{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGriditem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGriditem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAe5C,OACI,sBAAMC,SATS,SAACC,GAChBA,EAAEC,iBACKJ,EAAWK,OAAOC,OAAO,IACxBR,GAAe,SAAAS,GAAI,OAAIP,GAAJ,mBAAmBO,OACtCN,EAAc,MAKtB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAjBY,SAACP,GACrBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAO,uCAAC,WAAMC,GAAN,uBAAAC,EAAA,6DACXC,EADW,iDACoCC,UAAWH,GAD/C,+DAECI,MAAMF,GAFP,cAEXG,EAFW,gBAGIA,EAAKC,OAHT,uBAGVC,EAHU,EAGVA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACxB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATzB,kBAYdM,GAZc,4CAAD,sDCEPO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAGhC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACxB,4BAAIA,QCJCO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECAb,SAACA,GAAY,IAAD,EACRd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAHqB,mBAC3BC,EAD2B,KACpBC,EADoB,KAkBlC,OAZAC,qBAAU,WAENxB,EAAQC,GACPwB,MAAK,SAAAC,GAEFH,EAAS,CACLf,KAAKkB,EACLL,SAAS,SAGlB,CAACpB,IAEGqB,EDhBmBK,CAAa1B,GAA/Ba,EAF2B,EAEhCN,KAAaa,EAFmB,EAEnBA,QAGhB,OACI,cADK,CACL,sBACA,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAClDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBACX,qBAAKA,UAAU,YAAf,SAEWH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEZxBgB,EAAe,WAAO,IAAD,EAEEzC,mBAAS,CAAC,kBAFZ,mBAE3B0C,EAF2B,KAEf3C,EAFe,KAO9B,OACI,qCACG,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQ2C,EAAWnB,KAAI,SAAAT,GAAQ,OAClB,cAAC,EAAD,CAEAA,SAAWA,GADNA,Y,MCf7B6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.075814c2.chunk.js","sourcesContent":["import React, { useState } from 'react' //rafc para category\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    //La caja de texto debe tener un tipo de estado pq necesito saber qué es lo que está escribiendo\r\n    const [inputValue, setinputValue] = useState('');\r\n    const handleInputChange=(e)=>{\r\n        setinputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit=(e)=> {\r\n        e.preventDefault();\r\n            if(inputValue.trim().length>2){\r\n                setCategories( cats =>[inputValue, ...cats,]);\r\n                setinputValue('');\r\n            }\r\n       \r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes={ //mi definicion del proptypes\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifs=async(category)=> {\r\n    const url= `https://api.giphy.com/v1/gifs/search?q=${encodeURI (category)}&limit=10&api_key=lKlRtslmyijoOruLcZZwRthobRaYulKA`;\r\n    const resp= await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img =>{\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\nreturn gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGriditem = ({title, url}) => {\r\n\r\n    //console.log(id, title, url)\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}/>\r\n        <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGriditem } from './GifGriditem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\nconst {data:images, loading}= useFetchGifs(category);\r\n   \r\n\r\n    return ( //como en el return hay dos objetos, se usa fragment\r\n        <> \r\n        <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n        {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n        {<div className=\"card-grid\">           \r\n                {\r\n                    images.map(img=>(\r\n                        <GifGriditem \r\n                            key={img.id}\r\n                            {...img}\r\n                        />\r\n                    ))\r\n                }\r\n           \r\n            </div>}\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\n\r\nexport const useFetchGifs=(category)=>{\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(()=>{\r\n\r\n        getGifs(category)\r\n        .then(imgs =>{\r\n            \r\n            setstate({\r\n                data:imgs,\r\n                loading: false\r\n            });  \r\n        })\r\n    }, [category])\r\n\r\n    return state;\r\n}","//rafc + tab para simplificar el inicio\r\nimport React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\nconst [categories, setCategories] = useState(['Dragon Ball Z']);\r\n\r\n//const handleAdd = () =>{\r\n//    setCategories( cats =>[...cats, 'HunterXHunter']);\r\n//}\r\n    return (\r\n        <>\r\n           <h2>GifExpertApp</h2> \r\n           <AddCategory setCategories={setCategories}/>\r\n           <hr/>\r\n\r\n           <ol>\r\n               {\r\n                   categories.map(category =>\r\n                        <GifGrid \r\n                        key={category}\r\n                        category= {category}/>\r\n                    )\r\n               }\r\n           </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}